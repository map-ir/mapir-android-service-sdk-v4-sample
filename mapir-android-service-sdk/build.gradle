apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

ext {
    bintrayRepo = 'Service'
    bintrayName = 'ir.map.servicesdk'

    publishedGroupId = 'ir.map.servicesdk'
    libraryName = 'service-sdk'
    artifact = 'service-sdk'

    libraryDescription = 'This library is mapirservice.'

    libraryVersion = '4.0.0'

    developerId = 'mortezahosseini'
    developerName = 'Morteza Hosseini'
    developerEmail = 'mortezahosseinee@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29

        buildConfigField "String", "MAPIR_SERVICE_SDK_VERSION", String.format("\"%s\"", libraryVersion)
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false

            // Library specific proguard files
            proguardFile 'proguard-google-play-services.pro'
            proguardFile 'proguard-gson.pro'

            // Default proguard files & project app specific rules,
            //  see examples folder for more information
            proguardFile 'proguard-project-app.pro'
            proguardFile getDefaultProguardFile('proguard-android.txt')
            // As of Gradle Android plugin 1.1.0, the test APK has a separate config
            testProguardFile 'proguard-project-test.pro'
        }
    }
}

dependencies {
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'com.squareup.okhttp3:okhttp:3.12.8' //TODO do not change this version
}

group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}